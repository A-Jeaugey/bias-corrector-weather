name: Daily Weather Pipeline

on:
  schedule:
    # Rappel : GitHub tourne en UTC. 18:05 et 23:30 √† Paris ‚âà 16:05 et 21:30 UTC.
    - cron: "5 16 * * *"   # Soir: fetch forecast J+1
    - cron: "30 21 * * *"  # Nuit: obs + train + predict + plots
  workflow_dispatch:       # Permet de lancer manuellement

permissions:
  contents: write          # Indispensable pour autoriser le push automatique

jobs:
  daily-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # On garde tes credentials pour que le push fonctionne
        with:
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip' # Acc√©l√®re l'installation des d√©pendances

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: SOIR Fetch daily forecast (J+1)
        if: github.event.schedule == '5 16 * * *'
        run: python src/fetch_forecast.py

      - name: NUIT Fetch observations, train, predict
        # Cette √©tape ne tourne que pour le cron de la nuit ou si lanc√©e manuellement
        if: github.event.schedule == '30 21 * * *' || github.event_name == 'workflow_dispatch'
        run: |
          python src/fetch_obs.py
          python src/train.py
          python src/predict.py

      - name: NUIT Generate plots
        # On g√©n√®re les graphiques juste apr√®s la pr√©diction
        if: github.event.schedule == '30 21 * * *' || github.event_name == 'workflow_dispatch'
        run: python src/plots.py
        
      - name: Commit and push updates
        # Cette √©tape tourne √† chaque fois, mais ne fera un commit que si des fichiers ont chang√©
        run: |
          # On garde ta configuration de git, elle est parfaite
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # On ajoute tous les fichiers susceptibles de changer, y compris les nouveaux graphiques
          git add data/*.csv models/*.joblib last_prediction.json plots/*.png
          
          # On utilise une condition bash pour ne commiter que s'il y a des changements
          if ! git diff --staged --quiet; then
            git commit -m "üìà Daily update: $(date -u +%F)"
            git push
          else
            echo "No changes to commit."
          fi